(def constant BUYING_RENT_IDX -1)
(def constant RENT_NOT_SELECTED_IDX -2)

(def constant RENT_TYPE_TIME 1)
(def constant RENT_TYPE_SEASON 4)
(def constant RENT_TYPE_SEASON_CYCLE 5)

(def constant SEASON_TYPE_RANKED 1)
(def constant SEASON_TYPE_EPIC 2)

(def constant DEFAULT_RENT_DAYS "{
        '3' : R.strings.store.buyVehicleWindow.rentBtnLabel3Days(),
        '7' : R.strings.store.buyVehicleWindow.rentBtnLabel7Days(),
        '30' : R.strings.store.buyVehicleWindow.rentBtnLabel30Days()
    }"
)

(def constant DEFAULT_EPIC_RENT_STATES "{
        '4' : R.strings.store.buyVehicleWindow.rentBtnLabelSeason.epicSeason(),
        '5' : R.strings.store.buyVehicleWindow.rentBtnLabelSeason.epicCycle()
    }"
)

(def constant DEFAULT_RANKED_RENT_STATES "{
        '4' : R.strings.store.buyVehicleWindow.rentBtnLabelSeason.rankedSeason(),
        '5' : R.strings.store.buyVehicleWindow.rentBtnLabelSeason.rankedCycle()
    }"
)

(def element BuyVehicleFooter(name:str) layout=true
    (macro EquipmentBlockModel)
    (scope
        (event buyBtnClick)
        (event onAmmoSelectChange)
        (event onSlotSelectChange)
        (event playSlotAnim)
    )
    (style
        (width = 100%)
        (height = 107px)
        (align = "center")
    )
    (image
        (name = 'footerBg')
        (source = "R.images.gui.maps.icons.store.panel()")
        (style
            (width = 140%)
        )
    )
    (block
        (name = 'footerInner')
        (style
            (width = 100%)
            (height = 100%)
            (align = "left")
            (position="absolute")
            (flow = "Flow.HORIZONTAL")
        )
        (hblock
            (style
                (align = "middle")
                (height=100%)
                (gap = 37px)
            )
            (element AdditionalEquipmentSlot 'ammo'
                (scope
                    (icon = "R.atlases.store.ammo()")
                    (descr = "R.strings.store.buyVehicleWindow.equipment.ammo()")
                    (dispatch onAmmoSelectChange on='onSelectedChange')
                    (tooltip = "R.strings.dialogs.buyVehicleWindow.fullAmmo.resId")
                )
                (controller $Tutorial viewTutorialId='BuyVehicleView' controlID='ammo')
                (name = 'ammo')
            )
            (element AdditionalEquipmentSlot 'slot'
                (scope
                    (icon = "R.atlases.store.slots()")
                    (descr = "R.strings.store.buyVehicleWindow.equipment.slot()")
                    (bind isAlert "(tradeOffVehicleIntCD > 0) ? false:!emtySlotAvailable")
                    (bind isAlert "(tradeOffVehicleIntCD > 0) ? false:!emtySlotAvailable && !$event.value" watch=false init=false on='onSelectedChange')
                    (tooltip = "R.strings.dialogs.buyVehicleWindow.freeRentSlot.resId")
                    (bind isSlotAnimPlaying "isSlotAnimPlaying")
                )
                (controller $Tutorial viewTutorialId='BuyVehicleView' controlID='slot')
                (name = 'slot')
            )
        )
        (hblock
            (name = 'vehicleButtons')
            (style
                (position="absolute")
                (align = "left")
                (width = 202px)
                (left = 41%)
                (marginTop = -17px)
            )
            (button 'vehicleTradeInBtn'
                (macro ButtonIconTextModel)
                (macro ButtonStylePrimaryGhost "{height : 34px, fontSize : 14px}")
                (style
                    (width = 162px)
                )
                (label
                    (class TutorialTextStyle)
                )
                (icon
                    (style
                        (margin = -8px)
                    )
                )
                (dispatch onSelectTradeOffVehicle on='clicked')
                (element HitArea)
                (hitArea = "$target.hitElement")
                (controller $ToolTip
                    (args
                        tooltipId='tradeInInfo'
                    )
                    (content = "R.views.common.tooltip_window.backport_tooltip_content.BackportTooltipContent.resId")
                    (decorator = "R.views.common.tooltip_window.tooltip_window.TooltipWindow.resId")
                    (bind enabled "tradeOffWidgetEnabled")
                )
                (controller $ToolTip
                    (args
                        tooltipId='tradeInInfoNotAvailable'
                    )
                    (content = "R.views.common.tooltip_window.backport_tooltip_content.BackportTooltipContent.resId")
                    (decorator = "R.views.common.tooltip_window.tooltip_window.TooltipWindow.resId")
                    (bind enabled "!tradeOffWidgetEnabled")
                )
                (bind enabled "tradeOffWidgetEnabled")
            )
            (hblock
                (style
                    (width=100%)
                    (height=100%)
                )
                (element VehicleBtn 'vehicleBtn'
                    (style
                        (width = 162px)
                    )
                    (dispatch onSelectTradeOffVehicle on='click'
                        (enabled = "$event.buttonIdx == MOUSE.LEFT")
                    )
                    (controller $ToolTip
                        (args
                            tooltipId="tradeInTooltip"
                        )
                        (content = "R.views.common.tooltip_window.backport_tooltip_content.BackportTooltipContent.resId")
                        (decorator = "R.views.common.tooltip_window.tooltip_window.TooltipWindow.resId")
                    )
                )
                (button 'tradeOffResetBtn'
                    (bind visible "tradeInIsEnabled && tradeOffVehicleIntCD >= 0 && !isRentVisible")
                    (macro ButtonStylePrimaryGhost "{height : 34px}")
                    (style
                        (width = 34px)
                        (marginLeft = 6px)
                    )
                    (image
                        (source = "R.images.gui.maps.icons.popovers.close_button_slim_up()")
                    )
                    (dispatch onCancelTradeOffVehicle on='clicked')
                )
            )
        )
        (hblock
            (style
                (align = "middle|right")
                (width=100%)
                (height=100%)
                (gap = 10px)
            )
            (hblock
                (name = 'price_block')
                (style
                    (width=100%)
                    (height=31px)
                    (marginRight = 14px)
                )
                (element Group 'totalPrice' 'group' renderer_name='ActionPriceTotalCostSmallDiscount' container_flow="Flow.HORIZONTAL"
                    (scope
                        (bind containerWidth "100%")
                        (bind containerAlign "right")
                        (containerGap=16px)
                    )
                )
            )
            (hblock
                (button 'vehicleRentBtn'
                    (macro ButtonIconTextModel)
                    (macro ButtonStylePrimaryGhost "{height : 34px, fontSize : 14px}")
                    (style
                        (width = 184px)
                    )
                    (label
                        (class TutorialTextStyle)
                    )

                    (bind label "R.strings.store.buyVehicleWindow.restore()"
                        (bind enabled "selectedRentID == RENT_NOT_SELECTED_IDX")
                    )
                    (bind label "DEFAULT_RENT_DAYS[selectedRentDays] != null ? DEFAULT_RENT_DAYS[selectedRentDays] : TextFormat(R.strings.store.buyVehicleWindow.rentBtnLabelAny(), {days:selectedRentDays})"
                        (bind enabled "selectedRentType == RENT_TYPE_TIME && selectedRentID != BUYING_RENT_IDX && selectedRentID != RENT_NOT_SELECTED_IDX")
                    )
                    (bind label "DEFAULT_EPIC_RENT_STATES[selectedRentType]"
                        (bind enabled "(selectedRentType == RENT_TYPE_SEASON || selectedRentType == RENT_TYPE_SEASON_CYCLE) && selectedRentSeason == SEASON_TYPE_EPIC")
                    )
                    (bind label "DEFAULT_RANKED_RENT_STATES[selectedRentType]"
                        (bind enabled "(selectedRentType == RENT_TYPE_SEASON || selectedRentType == RENT_TYPE_SEASON_CYCLE) && selectedRentSeason == SEASON_TYPE_RANKED")
                    )
                    (bind label "R.strings.store.buyVehicleWindow.termSlotUnlim()"
                        (bind enabled "selectedRentID == BUYING_RENT_IDX")
                    )
                    
                    (element PopoverTargetObj 'popoverPositionObj' 10 10 184 32)
                    (controller $Popover id = 'RentalTermSelectionPopover'
                        (args "{vehicleIntCD:buyVehicleIntCD, selectedRentTerm:selectedRentID}" "$target.popoverPositionObj")
                    )
                    (mc 'Btn_Blink'
                        (class AbsPositionFullSizeStyle)
                    )
                    (element HitArea)
                    (hitArea = "$target.hitElement")
                )
            )
            (button 'buyOrangeBtn'
                (macro ButtonStyleMain "BUTTON_SIZE_LARGE")
                (scope
                    (var isEnabledForTutorial:bool = true)
                )
                (bind tabIndex "buyBtnIsEnabled && isEnabledForTutorial ? 1 : -1")
                (controller $Tutorial viewTutorialId='BuyVehicleView' controlID='submitBtn')
                (bind label "buyBtnLabel")
                (bind enabled "buyBtnIsEnabled && isEnabledForTutorial")
                (dispatch buyBtnClick on='clicked' init=false
                    (enabled = "buyBtnIsEnabled && (tradeOffVehicleIntCD <= 0 || !popoverIsAvailable)")
                )
                (style
                    (width = 160px)
                    (minWidth = 123)
                )

                (element PopoverTargetObj 'popoverPositionObj' 0 0 160 32)
                (controller $Popover autoact=false id = 'VehicleSellConfirmationPopover'
                    (bind autoact "buyBtnIsEnabled && tradeOffVehicleIntCD > 0 && popoverIsAvailable")
                    (args "{confirmGoldPrice:confirmGoldPrice, tradeOffVehicleIntCD:tradeOffVehicleIntCD}" "$target.popoverPositionObj")
                )
                (bindcall setFocus "buyBtnIsEnabled && isEnabledForTutorial" init=false)
                (controller $ToolTip
                    (args
                        tooltipId='tradeInStateNotAvailable'
                    )
                    (content = "R.views.common.tooltip_window.backport_tooltip_content.BackportTooltipContent.resId")
                    (decorator = "R.views.common.tooltip_window.tooltip_window.TooltipWindow.resId")
                    (bind enabled "!buyBtnIsEnabled && tradeOffVehicleIntCD > 0")
                )
            )
        )
    )
)

(def element PopoverTargetObj(name:str, x:number, y:number, width:number, height:number) layout=true
    (name = "name")
    (style
        (position = "absolute")
        (left = "x")
        (top = "y")
        (width = "width")
        (height = "height")
        (backgroundColor = 0xff00ff00)
        (alpha=0)
    )
    (mouseEnabled = false) 
    (mouseChildren = false)
)
